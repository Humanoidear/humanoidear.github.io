---
// src/pages/index.astro
import Layout from '../layouts/Layout.astro';

import { 
  Layers, Activity, Sparkles, Cog, Share2, Award, Youtube, 
  Rocket, Cpu, ArrowRight, LineChart, ZapOff, Shield, Target,
  Clock, DollarSign, PieChart, Check, Users, BarChart, Bot, Truck, Code2, Database, PenTool, Factory, Globe, QrCode, Zap
} from 'lucide-astro';

// Define benefits data as an array for easier maintenance and reusability
const benefits = [
  {
    id: "cycle-time",
    title: "Reduced Cycle Times",
    description: "Automation drastically decreases processing time, reducing product handling time from reception to shipping.",
    icon: Clock,
    gradientFrom: "from-blue-500",
    gradientTo: "to-indigo-600",
    bgFrom: "from-blue-50",
    bgTo: "to-indigo-50",
    borderColor: "border-blue-100",
    shadowColor: "shadow-blue-100/30",
    hoverShadowColor: "hover:shadow-blue-200/40"
  },
  {
    id: "cost",
    title: "Cost Reduction",
    description: "Our system reduces labor costs by automating repetitive tasks, while minimizing product damage and optimizing storage space utilization.",
    icon: DollarSign,
    gradientFrom: "from-purple-500",
    gradientTo: "to-pink-600",
    bgFrom: "from-purple-50",
    bgTo: "to-pink-50",
    borderColor: "border-purple-100",
    shadowColor: "shadow-purple-100/30",
    hoverShadowColor: "hover:shadow-purple-200/40"
  },
  {
    id: "speed",
    title: "Increased Speed",
    description: "The system processes inventory at consistent high speeds 24/7, without fatigue or breaks, maximizing throughput and operational efficiency.",
    icon: Rocket,
    gradientFrom: "from-green-500",
    gradientTo: "to-teal-600",
    bgFrom: "from-green-50",
    bgTo: "to-teal-50",
    borderColor: "border-green-100",
    shadowColor: "shadow-green-100/30",
    hoverShadowColor: "hover:shadow-green-200/40"
  },
  {
    id: "errors",
    title: "Error Elimination",
    description: "Automated scanning and verification virtually eliminates human errors in product identification, tracking, and inventory management processes.",
    icon: ZapOff,
    gradientFrom: "from-red-500",
    gradientTo: "to-orange-600",
    bgFrom: "from-red-50",
    bgTo: "to-orange-50",
    borderColor: "border-red-100",
    shadowColor: "shadow-red-100/30",
    hoverShadowColor: "hover:shadow-red-200/40"
  },
  {
    id: "logistics",
    title: "Logistics Optimization",
    description: "Real-time tracking enables efficient space utilization, optimized routes, and streamlined transfer between distribution centers with minimal waste.",
    icon: Truck,
    gradientFrom: "from-yellow-500",
    gradientTo: "to-amber-600",
    bgFrom: "from-yellow-50",
    bgTo: "to-amber-50",
    borderColor: "border-yellow-100",
    shadowColor: "shadow-yellow-100/30",
    hoverShadowColor: "hover:shadow-yellow-200/40"
  },
  {
    id: "insights",
    title: "Real-Time Insights",
    description: "The web dashboard provides instant status updates, comprehensive analytics, and actionable insights for informed decision-making.",
    icon: Activity,
    gradientFrom: "from-cyan-500",
    gradientTo: "to-blue-600",
    bgFrom: "from-cyan-50",
    bgTo: "to-blue-50",
    borderColor: "border-cyan-100",
    shadowColor: "shadow-cyan-100/30",
    hoverShadowColor: "hover:shadow-cyan-200/40"
  }
];

// Define robots and system components
const systemComponents = [
  {
    id: "palletizer",
    title: "Industrial Palletizer",
    description: "Our system employs an advanced industrial palletizer that efficiently organizes products onto pallets for storage or shipping, with the same unit handling depalletizing operations.",
    image: "/img/palletizer.png",
    feature: "Automated stacking capability",
    gradientFrom: "from-blue-500",
    gradientTo: "to-indigo-600",
    shadowColor: "shadow-blue-100/50"
  },
  {
    id: "conveyor",
    title: "Conveyor System",
    description: "Products travel through our facility on an intelligent conveyor system that feeds items to the palletizer and enables seamless movement throughout the warehouse.",
    image: "/img/conveyor.png",
    feature: "Synchronized operation",
    gradientFrom: "from-indigo-500",
    gradientTo: "to-purple-600",
    shadowColor: "shadow-indigo-100/50"
  },
  {
    id: "agv",
    title: "Automated Guided Vehicle",
    description: "Our AGV autonomously transports pallets between the designated storage area and the palletization zone, eliminating manual transport requirements.",
    image: "/img/agv.png",
    feature: "Optimized routing paths",
    gradientFrom: "from-purple-500",
    gradientTo: "to-pink-600",
    shadowColor: "shadow-purple-100/50"
  },
  {
    id: "cobots",
    title: "Collaborative Robots",
    description: "Our cobots work safely alongside human staff, performing precision tasks while maintaining strict safety standards in human-robot shared spaces.",
    image: "/img/cobots.png",
    feature: "Human-robot collaboration",
    gradientFrom: "from-red-500",
    gradientTo: "to-orange-600",
    shadowColor: "shadow-red-100/50"
  },
  {
    id: "qr-system",
    title: "QR Code Tracking",
    description: "Our system automatically reads QR codes on incoming products, instantly registering them in the database with plans for future RFID implementation.",
    image: "/img/qr-system.webp",
    feature: "Contactless identification",
    gradientFrom: "from-green-500",
    gradientTo: "to-teal-600",
    shadowColor: "shadow-green-100/50"
  },
  {
    id: "webapp",
    title: "Web Dashboard",
    description: "Our custom web application provides real-time monitoring, detailed analytics, and intuitive controls for managing the entire automation ecosystem.",
    image: "/img/webapp.png",
    feature: "Real-time data visualization",
    gradientFrom: "from-cyan-500",
    gradientTo: "to-blue-600",
    shadowColor: "shadow-cyan-100/50"
  }
];

// Define tech stack
const techStack = [
  {
    id: "robodk",
    title: "RoboDK",
    description: "Robotics simulation software for programming and validating our automation systems",
    image: "/img/robodk-logo.png"
  },
  {
    id: "cpp",
    title: "C++",
    description: "High-performance programming for real-time control of robotic components",
    image: "/img/cpp-logo.png"
  },
  {
    id: "python",
    title: "Python",
    description: "Backend logic, data processing, and RoboDK integration",
    image: "/img/python-logo.webp"
  },
  {
    id: "mqtt",
    title: "MQTT",
    description: "Lightweight messaging protocol for machine-to-machine communication",
    image: "/img/mqtt-logo.png"
  },
  {
    id: "astro",
    title: "Astro",
    description: "Modern web framework for building our fast, optimized user interface",
    image: "/img/astro-logo.png"
  },
  {
    id: "javascript",
    title: "JavaScript",
    description: "Client-side interactivity and real-time dashboard updates",
    image: "/img/javascript-logo.png"
  },
  {
    id: "postgresql",
    title: "PostgreSQL",
    description: "Robust database for inventory tracking and system state management",
    image: "/img/postgresql-logo.png"
  },
  {
    id: "css",
    title: "CSS & Tailwind",
    description: "Styling our responsive, modern user interface",
    image: "/img/tailwind-logo.png"
  },
  {
    id: "arduino",
    title: "Arduino",
    description: "Microcontroller integration for sensors and low-level automation",
    image: "/img/arduino-logo.png"
  },
  {
    id: "espressif",
    title: "Espressif",
    description: "ESP32 microcontrollers for wireless connectivity and IoT functionality",
    image: "/img/espressif-logo.svg"
  },
  {
    id: "industrial",
    title: "Industrial Automation",
    description: "PLCs and industrial control systems integration",
    image: "/img/industrial-logo.png"
  },
  {
    id: "embedded",
    title: "Embedded Systems",
    description: "Custom hardware solutions for specialized automation tasks",
    image: "/img/embedded-logo.png"
  }
];

// Define key metrics
const metrics = [
  {
    value: "Blazingly Fast",
    label: "processing",
    icon: Clock,
    bgColor: "bg-blue-500/20",
    iconColor: "text-blue-300"
  },
  {
    value: "99.9%",
    label: "Accuracy",
    icon: Shield,
    bgColor: "bg-purple-500/20",
    iconColor: "text-purple-300"
  },
  {
    value: "80k",
    label: "Implementation Cost",
    icon: BarChart,
    bgColor: "bg-indigo-500/20",
    iconColor: "text-indigo-300"
  }
];

// Define mission pillars
const missionPillars = [
  {
    title: "Robot-Driven",
    description: "Leveraging collaborative robots and AGVs to handle repetitive, physically demanding tasks",
    icon: Bot,
    gradientFrom: "from-blue-500",
    gradientTo: "to-indigo-600",
    bgFrom: "from-blue-50",
    bgTo: "to-indigo-50",
    borderColor: "border-blue-100",
    shadowColor: "shadow-blue-100/40",
    hoverShadowColor: "shadow-blue-100/50"
  },
  {
    title: "Interconnected",
    description: "Real-time monitoring and control via intuitive web application interfaces",
    icon: Globe,
    gradientFrom: "from-indigo-500",
    gradientTo: "to-purple-600",
    bgFrom: "from-indigo-50",
    bgTo: "to-purple-50",
    borderColor: "border-indigo-100",
    shadowColor: "shadow-indigo-100/40",
    hoverShadowColor: "shadow-indigo-100/50"
  },
  {
    title: "Intelligent",
    description: "Advanced QR code scanning enables seamless product tracking and identification",
    icon: QrCode,
    gradientFrom: "from-purple-500",
    gradientTo: "to-pink-600",
    bgFrom: "from-purple-50",
    bgTo: "to-pink-50",
    borderColor: "border-purple-100",
    shadowColor: "shadow-purple-100/40",
    hoverShadowColor: "shadow-purple-100/50"
  }
];

// Additional Features
const additionalFeatures = [
  {
    title: "Advanced Safety Systems",
    description: "Integrated sensors and emergency protocols ensure complete operational safety",
    icon: Shield,
    color: "text-green-600"
  },
  {
    title: "Scalable Architecture",
    description: "The system can be expanded to accommodate increased throughput requirements",
    icon: Layers,
    color: "text-blue-600"
  },
  {
    title: "Energy Efficient",
    description: "Smart power management reduces energy consumption by up to 40%",
    icon: Zap,
    color: "text-amber-600"
  },
  {
    title: "Team-Friendly",
    description: "Designed to enhance workforce productivity rather than replace human workers",
    icon: Users,
    color: "text-indigo-600"
  }
];
---

<Layout title="Autonomous Inventory System - Next-Gen Warehouse Solutions">
  <!-- Hero Section with 3D elements and dynamic background -->
  <section class="relative min-h-[100vh] flex items-center justify-center overflow-hidden">
    <!-- Dynamic background gradient with noise texture -->
    <div class="absolute inset-0 bg-gradient-to-br from-blue-950 via-indigo-900 to-violet-950">
      <div class="absolute inset-0 opacity-5" style="background-image: url('/img/noise-texture.png');"></div>
    </div>
    
    <!-- Animated particles background -->
    <div id="particles-js" class="absolute inset-0 z-0"></div>
    
    <!-- 3D grid floor effect -->
    <div class="absolute bottom-0 left-0 right-0 h-[40vh] perspective-1000 opacity-20 overflow-hidden">
      <div class="absolute inset-0 grid-floor transform rotate-x-60 scale-y-150 translate-y-1/2"></div>
    </div>
    
    <!-- Glowing orbs -->
    <div class="absolute top-1/4 right-1/4 w-96 h-96 bg-blue-500 rounded-full opacity-20 blur-[100px] animate-pulse-slow"></div>
    <div class="absolute bottom-1/3 left-1/3 w-80 h-80 bg-violet-500 rounded-full opacity-20 blur-[100px] animate-pulse-slow animation-delay-2000"></div>
    
    <!-- Content -->
    <div class="container mx-auto px-4 py-10 relative z-10">
      <div class="flex flex-col lg:flex-row items-center gap-12 lg:gap-20">
        <div class="lg:w-1/2 space-y-8">
          <div class="flex items-center space-x-2">
            <img src="/img/ROBOInventory_logo.png" alt="AutoInventory Logo" class="h-15 invert" />
          </div>
          
          <h1 class="text-5xl lg:text-7xl font-bold leading-tight tracking-tight text-white">
            The Future of Inventory Is Autonomous
          </h1>
          
          <p class="text-blue-100 text-xl leading-relaxed max-w-xl opacity-90">
            Our innovative system combines advanced robotics, databases, and real-time tracking to transform warehouse operations into efficient, error-free processes.
          </p>
          
          <div class="flex flex-wrap gap-4">
                        <a href="#tech-stack" class="group relative overflow-hidden px-8 py-4 bg-white text-blue-900 rounded-full font-semibold flex items-center gap-2 transition-all duration-300 hover:shadow-lg hover:shadow-blue-500/25">
              <div class="absolute inset-0 bg-gradient-to-r from-blue-100 to-blue-200 transform origin-left scale-x-0 group-hover:scale-x-100 transition-transform duration-500"></div>
              <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="relative z-10">
                <polygon points="12 2 2 7 12 12 22 7 12 2"></polygon>
                <polyline points="2 17 12 22 22 17"></polyline>
                <polyline points="2 12 12 17 22 12"></polyline>
              </svg>
              <span class="relative z-10">Explore Tech Stack</span>
            </a>
            
            <a href="#benefits" class="group relative overflow-hidden px-8 py-4 bg-gradient-to-r from-blue-600 to-indigo-600 text-white rounded-full font-semibold flex items-center gap-2 transition-all duration-300 hover:shadow-lg hover:shadow-blue-500/50">
              <div class="absolute inset-0 bg-gradient-to-r from-blue-500 to-indigo-500 transform origin-left scale-x-0 group-hover:scale-x-100 transition-transform duration-500"></div>
              <Activity class="w-5 h-5 relative z-10" />
              <span class="relative z-10">See Benefits</span>
            </a>
          </div>
          
                    <!-- Metrics in glass cards -->
          <div class="grid grid-cols-1 sm:grid-cols-3 gap-4 mt-12">
            {metrics.map(metric => (
              <div class="backdrop-blur-md bg-white/10 rounded-2xl p-4 border border-white/10 flex items-center gap-3 transition-transform duration-300 hover:transform hover:scale-105">
                <div class={`${metric.bgColor} p-2 rounded-lg`}>
                  <!-- Replace dynamic icon with static SVG based on icon name -->
                  {metric.icon.name === 'Clock' && (
                    <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class={metric.iconColor}>
                      <circle cx="12" cy="12" r="10"></circle>
                      <polyline points="12 6 12 12 16 14"></polyline>
                    </svg>
                  )}
                  {metric.icon.name === 'Shield' && (
                    <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class={metric.iconColor}>
                      <path d="M12 22s8-4 8-10V5l-8-3-8 3v7c0 6 8 10 8 10z"></path>
                    </svg>
                  )}
                  {metric.icon.name === 'BarChart' && (
                    <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class={metric.iconColor}>
                      <line x1="12" y1="20" x2="12" y2="10"></line>
                      <line x1="18" y1="20" x2="18" y2="4"></line>
                      <line x1="6" y1="20" x2="6" y2="16"></line>
                    </svg>
                  )}
                </div>
                <div>
                  <span class="block text-2xl font-bold text-white">{metric.value}</span>
                  <span class="text-blue-200 text-sm">{metric.label}</span>
                </div>
              </div>
            ))}
          </div>
        </div>
        
        <div class="lg:w-1/2 relative">
          <!-- 3D isometric illustration -->
          <div class="relative">
            <!-- Main image with glass effect -->
            <div class="rounded-2xl overflow-hidden shadow-2xl transform transition-all duration-700 hover:scale-[1.02] backdrop-blur-sm border border-white/10 bg-gradient-to-br from-white/5 to-white/10">
              <div class="aspect-video relative">
                <img 
                  src="/img/hero-warehouse-3d.png" 
                  alt="Automated Warehouse System" 
                  class="w-full h-full object-cover shadow-inner opacity-90 transition-all duration-700"
                  loading="eager"
                />
                <div class="absolute inset-0 bg-gradient-to-tr from-blue-900/50 via-blue-900/30 to-transparent"></div>
                
                <!-- Interactive element indicators -->
                <div class="absolute top-1/4 left-1/4 w-6 h-6 rounded-full border-2 border-blue-300 flex items-center justify-center pulse-animation">
                  <div class="w-2 h-2 rounded-full bg-blue-300"></div>
                </div>
                
                <div class="absolute top-1/2 right-1/3 w-6 h-6 rounded-full border-2 border-indigo-300 flex items-center justify-center pulse-animation animation-delay-1000">
                  <div class="w-2 h-2 rounded-full bg-indigo-300"></div>
                </div>
                
                <div class="absolute bottom-1/3 right-1/4 w-6 h-6 rounded-full border-2 border-violet-300 flex items-center justify-center pulse-animation animation-delay-2000">
                  <div class="w-2 h-2 rounded-full bg-violet-300"></div>
                </div>
                
                <!-- Info card -->
                <div class="absolute bottom-6 left-6 right-6 bg-black/50 backdrop-blur-lg p-5 rounded-xl text-sm text-blue-100 transform transition-all duration-300 hover:translate-y-[-5px] border border-white/10">
                  <h3 class="text-xl font-semibold mb-2 text-white">Autonomous Inventory System</h3>
                  <p>Our integrated robotics solution streamlines warehouse operations with minimal human intervention.</p>
                </div>
              </div>
            </div>
            
            <!-- Floating elements -->
            <div class="absolute -top-8 -right-8 w-32 h-32 bg-gradient-to-br from-blue-500 to-blue-700 rounded-2xl -z-10 blur-lg opacity-60 animate-float"></div>
            <div class="absolute -bottom-6 -left-6 w-24 h-24 bg-gradient-to-br from-indigo-500 to-violet-600 rounded-full -z-10 blur-lg opacity-60 animate-float animation-delay-2000"></div>
            
            <!-- Tech indicators -->
            <div class="absolute top-10 -left-10 bg-white/10 backdrop-blur-md rounded-xl p-3 border border-white/10 transform -rotate-2 shadow-lg">
              <div class="flex items-center gap-2">
                <div class="bg-blue-500 w-3 h-3 rounded-full"></div>
                <span class="text-sm text-white font-medium">System Online</span>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
    
    <!-- Wave separator -->
    <div class="absolute bottom-0 left-0 right-0 transform translate-y-1">
      <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 1440 320" class="w-full">
        <path fill="#ffffff" fill-opacity="1" d="M0,224L48,213.3C96,203,192,181,288,176C384,171,480,181,576,186.7C672,192,768,192,864,170.7C960,149,1056,107,1152,106.7C1248,107,1344,149,1392,170.7L1440,192L1440,320L1392,320C1344,320,1248,320,1152,320C1056,320,960,320,864,320C768,320,672,320,576,320C480,320,384,320,288,320C192,320,96,320,48,320L0,320Z"></path>
      </svg>
    </div>
  </section>

  <!-- Mission Statement with modern visual language -->
  <section class="py-28 lg:py-36 bg-white relative overflow-hidden">
    <div class="container mx-auto px-4 relative">
      <div class="max-w-7xl mx-auto">
        <div class="flex flex-col md:flex-row items-start gap-16">
          <!-- Left side - quote -->
          <div class="md:w-1/3 relative">
            <div class="sticky top-10">
              <div class="inline-block mb-6">
                <span class="inline-flex items-center px-3 py-1 rounded-full text-sm font-medium bg-blue-50 text-blue-700">
                  <Sparkles class="h-4 w-4 mr-1" />
                  Our Vision
                </span>
              </div>
              <h2 class="text-4xl lg:text-5xl font-bold mb-6 text-gray-800 tracking-tight leading-tight">
                Reimagining<br />Warehouse<br />Logistics
              </h2>
              
              <div class="w-20 h-1 bg-gradient-to-r from-blue-500 to-indigo-500 rounded-full mb-6"></div>
              
              <blockquote class="text-xl italic text-gray-700 leading-relaxed relative">
                <span class="absolute -top-6 -left-6 text-6xl text-blue-200">"</span>
                Through innovation and automation, we're creating a future where logistics is more efficient, sustainable, and accessible to all.
                <span class="absolute -bottom-4 -right-4 text-6xl text-blue-200">"</span>
              </blockquote>
            </div>
          </div>
          
          <!-- Right side - mission description and pillars -->
          <div class="md:w-2/3">
            <p class="text-xl text-gray-600 leading-relaxed mb-12">
              We set out to create an automated inventory system inspired by one team member's volunteer work at <span class="font-medium text-blue-700">Banco de Alimentos de València</span>. Our mission: to revolutionize logistics between distribution centers through cutting-edge robotics and automation that makes inventory management more efficient, accurate, and scalable.
            </p>
            
                        <div class="grid sm:grid-cols-1 md:grid-cols-3 gap-8 mt-16">
              {missionPillars.map((pillar, index) => (
                <div class={`relative overflow-hidden flex flex-col items-center p-8 rounded-2xl bg-gradient-to-br ${pillar.bgFrom} ${pillar.bgTo} border ${pillar.borderColor} shadow-lg ${pillar.shadowColor} transform transition-all duration-500 hover:-translate-y-2 hover:shadow-xl hover:${pillar.hoverShadowColor} group`}>
                  <!-- Background pattern -->
                  <div class="absolute inset-0 opacity-10 bg-pattern-dots"></div>
                  
                  <div class={`relative mb-6 bg-gradient-to-br ${pillar.gradientFrom} ${pillar.gradientTo} p-5 rounded-xl text-white shadow-lg transform group-hover:scale-110 transition-all duration-500`}>
                    <!-- Replace dynamic icon rendering with specific SVG icons -->
                    {pillar.icon.name === 'Bot' && (
                      <svg xmlns="http://www.w3.org/2000/svg" width="48" height="48" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="w-12 h-12">
                        <rect x="3" y="11" width="18" height="10" rx="2"></rect>
                        <circle cx="12" cy="5" r="2"></circle>
                        <path d="M12 7v4"></path>
                        <line x1="8" y1="16" x2="8" y2="16"></line>
                        <line x1="16" y1="16" x2="16" y2="16"></line>
                      </svg>
                    )}
                    {pillar.icon.name === 'Globe' && (
                      <svg xmlns="http://www.w3.org/2000/svg" width="48" height="48" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="w-12 h-12">
                        <circle cx="12" cy="12" r="10"></circle>
                        <line x1="2" y1="12" x2="22" y2="12"></line>
                        <path d="M12 2a15.3 15.3 0 0 1 4 10 15.3 15.3 0 0 1-4 10 15.3 15.3 0 0 1-4-10 15.3 15.3 0 0 1 4-10z"></path>
                      </svg>
                    )}
                    {pillar.icon.name === 'QrCode' && (
                      <svg xmlns="http://www.w3.org/2000/svg" width="48" height="48" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="w-12 h-12">
                        <rect x="3" y="3" width="5" height="5" rx="1"></rect>
                        <rect x="16" y="3" width="5" height="5" rx="1"></rect>
                        <rect x="3" y="16" width="5" height="5" rx="1"></rect>
                        <path d="M21 16h-3a2 2 0 0 0-2 2v3"></path>
                        <path d="M21 21v.01"></path>
                        <path d="M12 7v3a2 2 0 0 1-2 2H7"></path>
                        <path d="M12 3h.01"></path>
                        <path d="M12 16v.01"></path>
                      </svg>
                    )}
                  </div>
                  
                  <div class="absolute top-0 right-0 w-20 h-20 bg-white opacity-20 blur-3xl rounded-full transform -translate-y-1/2 translate-x-1/2"></div>
                  
                  <h3 class="text-xl font-bold text-gray-800 mb-3">{pillar.title}</h3>
                  <p class="text-gray-600 text-center">{pillar.description}</p>
                  
                  <!-- Decorative number -->
                  <div class="absolute bottom-2 right-2 text-6xl font-bold text-gray-100 opacity-30">0{index + 1}</div>
                </div>
              ))}
            </div>
          </div>
        </div>
      </div>
    </div>
  </section>

  <!-- System Overview with immersive design -->
  <section class="py-28 bg-gradient-to-b from-gray-50 to-white relative overflow-hidden">
    <!-- Technical background pattern -->
    <div class="absolute inset-0 opacity-5 pointer-events-none">
      <div class="absolute inset-0 bg-repeat" style="background-image: url('/img/circuit-pattern.svg');"></div>
    </div>
    
    <div class="container mx-auto px-4 relative">
      <div class="text-center mb-20">
        <div class="inline-block mb-6">
          <span class="inline-flex items-center px-3 py-1 rounded-full text-sm font-medium bg-indigo-50 text-indigo-700">
            <Cog class="h-4 w-4 mr-1" />
            System Architecture
          </span>
        </div>
        <h2 class="text-4xl lg:text-5xl font-bold mb-6 text-gray-800 tracking-tight">Our Integrated Automation Ecosystem</h2>
        <p class="text-xl text-gray-600 max-w-3xl mx-auto">
          A comprehensive solution seamlessly integrating cutting-edge hardware and intelligent software
        </p>
      </div>
      
      <!-- Interactive 3D component view -->
      <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-10">
        {systemComponents.map((component, index) => (
          <div class={`group bg-white rounded-2xl overflow-hidden shadow-xl transition-all duration-500 hover:shadow-2xl hover:-translate-y-2 hover:${component.shadowColor} relative`}>
            <!-- Component image with overlay -->
            <div class={`h-56 bg-gradient-to-r ${component.gradientFrom} ${component.gradientTo} relative overflow-hidden`}>
              <img 
                src={component.image} 
                alt={component.title} 
                class="w-full h-full object-cover mix-blend-overlay opacity-90 transition-transform duration-700 group-hover:scale-110"
              />
              
              <!-- Animated tech dots -->
              <div class="absolute inset-0 tech-dots-overlay opacity-30"></div>
              
              <!-- Glowing indicator -->
              <div class="absolute top-4 right-4 w-3 h-3 rounded-full bg-green-400 shadow-lg shadow-green-400/50 pulse-animation animation-delay-1000"></div>
              
              <div class="absolute inset-0 bg-gradient-to-t from-blue-900/90 via-blue-800/70 to-transparent flex items-end">
                <h3 class="text-2xl font-bold text-white p-8">{component.title}</h3>
              </div>
            </div>
            
            <!-- Component details -->
            <div class="p-8">
              <p class="text-gray-600 text-lg">
                {component.description}
              </p>
              <div class="mt-6 flex items-center text-blue-600 font-medium">
                <Share2 class="h-5 w-5 mr-2" />
                <span>{component.feature}</span>
              </div>
              
              <!-- Decorative element -->
              <div class="absolute bottom-4 right-4 text-6xl font-bold text-gray-100 opacity-10">0{index + 1}</div>
            </div>
          </div>
        ))}
      </div>
      
      <!-- Additional features section with glass morphism -->
      <div class="mt-32 max-w-5xl mx-auto">
        <div class="text-center mb-16">
          <div class="inline-block mb-4">
            <span class="inline-flex items-center px-3 py-1 rounded-full text-sm font-medium bg-blue-50 text-blue-700">
              <Award class="h-4 w-4 mr-1" />
              Additional Capabilities
            </span>
          </div>
          <h3 class="text-3xl lg:text-4xl font-bold text-gray-800 mb-6">Enhanced Features</h3>
          <p class="text-xl text-gray-600 max-w-3xl mx-auto">
            Our system extends beyond basic automation with intelligent features that adapt to your unique needs
          </p>
        </div>
        
                <div class="grid md:grid-cols-2 gap-8">
          {additionalFeatures.map((feature, index) => (
            <div class="bg-white p-8 rounded-2xl shadow-xl border border-gray-100 flex items-start gap-5 hover:shadow-2xl transition-all duration-500 hover:-translate-y-2 group relative overflow-hidden">
              <!-- Glowing background on hover -->
              <div class="absolute inset-0 bg-gradient-to-br from-blue-50 to-blue-100 opacity-0 group-hover:opacity-100 transition-opacity duration-500"></div>
              
              <!-- Feature icon -->
              <div class={`relative z-10 rounded-xl p-4 bg-gradient-to-br from-gray-100 to-white border border-gray-200 shadow-lg group-hover:scale-110 transition-transform duration-500`}>
                {feature.icon.name === 'Shield' && (
                  <svg xmlns="http://www.w3.org/2000/svg" width="32" height="32" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class={`w-8 h-8 ${feature.color}`}>
                    <path d="M12 22s8-4 8-10V5l-8-3-8 3v7c0 6 8 10 8 10z"></path>
                  </svg>
                )}
                {feature.icon.name === 'Layers' && (
                  <svg xmlns="http://www.w3.org/2000/svg" width="32" height="32" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class={`w-8 h-8 ${feature.color}`}>
                    <polygon points="12 2 2 7 12 12 22 7 12 2"></polygon>
                    <polyline points="2 17 12 22 22 17"></polyline>
                    <polyline points="2 12 12 17 22 12"></polyline>
                  </svg>
                )}
                {feature.icon.name === 'Zap' && (
                  <svg xmlns="http://www.w3.org/2000/svg" width="32" height="32" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class={`w-8 h-8 ${feature.color}`}>
                    <polygon points="13 2 3 14 12 14 11 22 21 10 12 10 13 2"></polygon>
                  </svg>
                )}
                {feature.icon.name === 'Users' && (
                  <svg xmlns="http://www.w3.org/2000/svg" width="32" height="32" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class={`w-8 h-8 ${feature.color}`}>
                    <path d="M17 21v-2a4 4 0 0 0-4-4H5a4 4 0 0 0-4 4v2"></path>
                    <circle cx="9" cy="7" r="4"></circle>
                    <path d="M23 21v-2a4 4 0 0 0-3-3.87"></path>
                    <path d="M16 3.13a4 4 0 0 1 0 7.75"></path>
                  </svg>
                )}
              </div>
              
              <!-- Feature content -->
              <div class="relative z-10">
                <h4 class="text-xl font-bold text-gray-800 mb-3">{feature.title}</h4>
                <p class="text-gray-600">{feature.description}</p>
              </div>
              
              <!-- Decorative number -->
              <div class="absolute bottom-2 right-2 text-6xl font-bold text-gray-100 opacity-10">0{index + 1}</div>
            </div>
          ))}
        </div>
      </div>
      
      <!-- Video CTA -->
      <div class="mt-24 text-center">
        <a 
          href="https://youtu.be/jKV7bqsT8gc" 
          target="_blank" 
          class="group inline-flex items-center gap-4 bg-gradient-to-r from-red-600 to-red-700 hover:from-red-700 hover:to-red-800 text-white font-medium py-5 px-10 rounded-full transition-all duration-300 shadow-xl hover:shadow-2xl hover:shadow-red-500/30 transform hover:-translate-y-1"
        >
          <div class="bg-white/20 p-3 rounded-full">
            <Youtube class="w-6 h-6" />
          </div>
          <span class="text-lg">Watch Our System in Action</span>
          <span class="group-hover:translate-x-2 transition-transform duration-300">→</span>
        </a>
        <p class="text-sm text-gray-500 mt-4 font-medium">Full RoboDK simulation video of our automated process</p>
      </div>
    </div>
  </section>

  <!-- Benefits Section with 3D cards -->
  <section id="benefits" class="py-28 bg-white relative overflow-hidden">
    <!-- Decorative rings -->
    <div class="absolute top-0 right-0 -translate-y-1/2 translate-x-1/2 opacity-[0.07]">
      <div class="w-[800px] h-[800px] border-[60px] border-indigo-600 rounded-full"></div>
    </div>
    <div class="absolute bottom-0 left-0 translate-y-1/2 -translate-x-1/2 opacity-[0.07]">
      <div class="w-[600px] h-[600px] border-[50px] border-blue-600 rounded-full"></div>
    </div>
    
    <div class="container mx-auto px-4 relative">
      <div class="text-center mb-20">
        <div class="inline-block mb-6">
          <span class="inline-flex items-center px-3 py-1 rounded-full text-sm font-medium bg-green-50 text-green-700">
            <Rocket class="h-4 w-4 mr-1" />
            Core Advantages
          </span>
        </div>
        <h2 class="text-4xl lg:text-5xl font-bold mb-6 text-gray-800 tracking-tight">Why Choose Automation?</h2>
        <p class="text-xl text-gray-600 max-w-3xl mx-auto">
          Our system delivers transformative advantages that redefine inventory management standards
        </p>
      </div>
      
            <!-- Benefits with 3D hover effect -->
      <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-10">
        {benefits.map((benefit, index) => (
          <div class={`p-10 bg-gradient-to-br ${benefit.bgFrom} ${benefit.bgTo} rounded-3xl border ${benefit.borderColor} shadow-xl ${benefit.shadowColor} transform transition-all duration-500 hover:-translate-y-2 hover:shadow-2xl hover:${benefit.hoverShadowColor} group relative overflow-hidden perspective-1000`}>
            <!-- Background pattern -->
            <div class="absolute inset-0 opacity-20 pattern-dots"></div>
            
            <!-- 3D icon card with static SVGs -->
            <div class="relative">
              <div class={`w-20 h-20 bg-gradient-to-br ${benefit.gradientFrom} ${benefit.gradientTo} text-white rounded-2xl flex items-center justify-center mb-8 shadow-lg transform group-hover:rotate-y-12 group-hover:scale-110 transition-all duration-500`}>
                {benefit.icon.name === 'Clock' && (
                  <svg xmlns="http://www.w3.org/2000/svg" width="40" height="40" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="w-10 h-10">
                    <circle cx="12" cy="12" r="10"></circle>
                    <polyline points="12 6 12 12 16 14"></polyline>
                  </svg>
                )}
                {benefit.icon.name === 'DollarSign' && (
                  <svg xmlns="http://www.w3.org/2000/svg" width="40" height="40" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="w-10 h-10">
                    <line x1="12" y1="1" x2="12" y2="23"></line>
                    <path d="M17 5H9.5a3.5 3.5 0 0 0 0 7h5a3.5 3.5 0 0 1 0 7H6"></path>
                  </svg>
                )}
                {benefit.icon.name === 'Rocket' && (
                  <svg xmlns="http://www.w3.org/2000/svg" width="40" height="40" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="w-10 h-10">
                    <path d="M4.5 16.5c-1.5 1.26-2 5-2 5s3.74-.5 5-2c.71-.84.7-2.13-.09-2.91a2.18 2.18 0 0 0-2.91-.09z"></path>
                    <path d="m12 15-3-3a22 22 0 0 1 2-3.95A12.88 12.88 0 0 1 22 2c0 2.72-.78 7.5-6 11a22.35 22.35 0 0 1-4 2z"></path>
                    <path d="M9 12H4s.55-3.03 2-4c1.62-1.08 5 0 5 0"></path>
                    <path d="M12 15v5s3.03-.55 4-2c1.08-1.62 0-5 0-5"></path>
                  </svg>
                )}
                {benefit.icon.name === 'ZapOff' && (
                  <svg xmlns="http://www.w3.org/2000/svg" width="40" height="40" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="w-10 h-10">
                    <polyline points="12.41 6.75 13 2 10.57 4.92"></polyline>
                    <polyline points="18.57 12.91 21 10 15.66 10"></polyline>
                    <polyline points="8 8 3 14 12 14 11 22 16 16"></polyline>
                    <line x1="1" y1="1" x2="23" y2="23"></line>
                  </svg>
                )}
                {benefit.icon.name === 'Truck' && (
                  <svg xmlns="http://www.w3.org/2000/svg" width="40" height="40" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="w-10 h-10">
                    <path d="M1 3h15v13H1z"></path>
                    <path d="M16 8h4l3 3v5h-7V8z"></path>
                    <circle cx="5.5" cy="18.5" r="2.5"></circle>
                    <circle cx="18.5" cy="18.5" r="2.5"></circle>
                  </svg>
                )}
                {benefit.icon.name === 'Activity' && (
                  <svg xmlns="http://www.w3.org/2000/svg" width="40" height="40" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="w-10 h-10">
                    <polyline points="22 12 18 12 15 21 9 3 6 12 2 12"></polyline>
                  </svg>
                )}
              </div>
              
              <!-- Glowing effect -->
              <div class="absolute top-0 left-0 -translate-x-1/2 -translate-y-1/2 w-20 h-20 bg-white opacity-30 blur-xl rounded-full"></div>
            </div>
            
            <h3 class="text-2xl font-bold mb-5 text-gray-800">{benefit.title}</h3>
            <p class="text-gray-600 text-lg" set:html={benefit.description}></p>
            
            <!-- Decorative number -->
            <div class="absolute bottom-3 right-3 text-7xl font-bold text-gray-800 opacity-5">0{index + 1}</div>
          </div>
        ))}
      </div>
    </div>
  </section>

  <!-- Tech Stack Section with interactive elements -->
  <section id="tech-stack" class="py-28 bg-gradient-to-b from-gray-50 to-white relative overflow-hidden">
    <!-- Animated tech particles background -->
    <div class="absolute inset-0 overflow-hidden">
      <div id="tech-particles" class="absolute inset-0 opacity-10"></div>
    </div>
    
    <!-- Circuit board pattern -->
    <div class="absolute inset-0 opacity-5">
      <div class="absolute inset-0 bg-circuit-pattern"></div>
    </div>
    
    <div class="container mx-auto px-4 relative">
      <div class="text-center mb-20">
        <div class="inline-block mb-6">
          <span class="inline-flex items-center px-3 py-1 rounded-full text-sm font-medium bg-indigo-50 text-indigo-700">
            <Cpu class="h-4 w-4 mr-1" />
            Technology
          </span>
        </div>
        <h2 class="text-4xl lg:text-5xl font-bold mb-6 text-gray-800 tracking-tight">Cutting-Edge Tech Stack</h2>
        <p class="text-xl text-gray-600 max-w-3xl mx-auto">
          We integrated best-in-class technologies across hardware and software domains to build our system
        </p>
      </div>
      
      <!-- Tech stack items with hover effects -->
      <div class="grid grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-8">
        {techStack.map((tech, index) => (
          <div class="bg-white rounded-2xl p-8 shadow-xl hover:shadow-2xl transition-all hover:-translate-y-2 duration-500 flex flex-col items-center text-center group border border-gray-100 relative overflow-hidden">
            <!-- Tech icon -->
            <div class="mb-6 transform transition-transform duration-500 group-hover:scale-110 relative z-10">
              {tech.isIcon ? (
                <Fragment set:html={`<${tech.icon} class="w-20 h-20 ${tech.color}" />`} />
              ) : (
                <img src={tech.image} alt={tech.title} class="h-20 object-contain" />
              )}
            </div>
            
            <!-- Glow effect on hover -->
            <div class="absolute inset-0 bg-gradient-to-br from-blue-50 to-indigo-50 opacity-0 group-hover:opacity-100 transition-opacity duration-500"></div>
            
            <!-- Tech info -->
            <h3 class="text-xl font-bold text-gray-800 mb-3 relative z-10">{tech.title}</h3>
            <p class="text-gray-600 mt-2 relative z-10">{tech.description}</p>
            
            <!-- Decorative element -->
            <div class="absolute -bottom-10 -right-10 w-40 h-40 bg-blue-50 rounded-full opacity-0 group-hover:opacity-30 transition-opacity duration-500"></div>
          </div>
        ))}
      </div>
    </div>
  </section>
  
  <!-- Call to Action with immersive design -->
  <section class="py-28 bg-gradient-to-r from-blue-600 via-indigo-700 to-violet-800 text-white relative overflow-hidden">
    <!-- Animated background -->
    <div class="absolute inset-0 overflow-hidden">
      <div class="absolute inset-0 opacity-20 bg-circuit-pattern"></div>
    </div>
    
    <!-- Glowing orbs -->
    <div class="absolute top-1/4 right-1/4 w-96 h-96 bg-blue-300 rounded-full opacity-20 blur-[100px] animate-pulse-slow"></div>
    <div class="absolute bottom-1/4 left-1/4 w-80 h-80 bg-violet-300 rounded-full opacity-20 blur-[100px] animate-pulse-slow animation-delay-2000"></div>
    
    <!-- Floating particles -->
    <div class="absolute inset-0">
      <div id="cta-particles" class="absolute inset-0 opacity-30"></div>
    </div>
    
    <div class="container mx-auto px-4 text-center relative z-10">
      <h2 class="text-4xl lg:text-6xl font-bold mb-8 tracking-tight">Ready to transform your warehouse operations?</h2>
      <p class="text-2xl text-blue-100 mb-12 max-w-3xl mx-auto">
        Our robotic automation system is redefining the future of inventory management.
      </p>
      
      <!-- CTA buttons -->
      <div class="flex flex-wrap justify-center gap-6">
        <a 
          href="mailto:apgondel@etsinf.upv.edu.es" 
          class="group px-10 py-5 bg-blue-800 text-white rounded-xl font-bold text-lg transition-all duration-300 hover:bg-blue-700 hover:shadow-2xl hover:shadow-blue-800/30 border border-blue-500 flex items-center gap-3 transform hover:-translate-y-1 relative overflow-hidden"
        >
          <!-- Hover animation -->
          <div class="absolute inset-0 w-full h-full bg-gradient-to-r from-blue-700 to-blue-600 transform -translate-x-full group-hover:translate-x-0 transition-transform duration-500"></div>
          
          <span class="relative z-10">Contact Our Team</span>
          <ArrowRight class="w-5 h-5 transition-transform duration-300 group-hover:translate-x-1 relative z-10" />
        </a>
      </div>
    </div>
  </section>

  <!-- Footer with modern design -->
  <footer class="bg-gray-900 text-white relative overflow-hidden">
    <!-- Background elements -->
    <div class="absolute inset-0 opacity-10">
      <div class="absolute inset-0 bg-dot-pattern"></div>
    </div>
    
    <div class="container mx-auto px-4 py-16">
      <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-10">
        <!-- Company info -->
        <div>
          <div class="mb-6">
            <img src="/img/ROBOInventory_logo.png" alt="Company Logo" class="h-10 invert" />
          </div>
          <p class="text-gray-400 mb-6">
            Transforming warehouse operations through cutting-edge robotics and intelligent automation.
          </p>
          <div class="flex space-x-4">
            <a href="https://www.github.com/humanoidear" class="text-gray-400 hover:text-white transition-colors">
              <svg class="w-6 h-6" fill="currentColor" viewBox="0 0 24 24" aria-hidden="true"><path fill-rule="evenodd" d="M12 2C6.477 2 2 6.484 2 12.017c0 4.425 2.865 8.18 6.839 9.504.5.092.682-.217.682-.483 0-.237-.008-.868-.013-1.703-2.782.605-3.369-1.343-3.369-1.343-.454-1.158-1.11-1.466-1.11-1.466-.908-.62.069-.608.069-.608 1.003.07 1.531 1.032 1.531 1.032.892 1.53 2.341 1.088 2.91.832.092-.647.35-1.088.636-1.338-2.22-.253-4.555-1.113-4.555-4.951 0-1.093.39-1.988 1.029-2.688-.103-.253-.446-1.272.098-2.65 0 0 .84-.27 2.75 1.026A9.564 9.564 0 0112 6.844c.85.004 1.705.115 2.504.337 1.909-1.296 2.747-1.027 2.747-1.027.546 1.379.202 2.398.1 2.651.64.7 1.028 1.595 1.028 2.688 0 3.848-2.339 4.695-4.566 4.943.359.309.678.92.678 1.855 0 1.338-.012 2.419-.012 2.747 0 .268.18.58.688.482A10.019 10.019 0 0022 12.017C22 6.484 17.522 2 12 2z" clip-rule="evenodd"></path></svg>
            </a>
          </div>
        </div>
        
        <!-- Contact info -->
        <div>
          <h3 class="text-lg font-bold mb-6">Contact Us</h3>
          <ul class="space-y-4 text-gray-400">
            <li class="flex items-start gap-3">
              <svg class="w-6 h-6 text-blue-400 flex-shrink-0" fill="none" stroke="currentColor" viewBox="0 0 24 24"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17.657 16.657L13.414 20.9a1.998 1.998 0 01-2.827 0l-4.244-4.243a8 8 0 1111.314 0z"></path><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 11a3 3 0 11-6 0 3 3 0 016 0z"></path></svg>
              <span>ETSINF UPV, Camí de Vera</span>
            </li>
            <li class="flex items-start gap-3">
              <svg class="w-6 h-6 text-blue-400 flex-shrink-0" fill="none" stroke="currentColor" viewBox="0 0 24 24"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 8l7.89 5.26a2 2 0 002.22 0L21 8M5 19h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z"></path></svg>
              <span>apgondel@etsinf.upv.es</span>
            </li>
            <li class="flex items-start gap-3">
              <svg class="w-6 h-6 text-blue-400 flex-shrink-0" fill="none" stroke="currentColor" viewBox="0 0 24 24"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 5a2 2 0 012-2h3.28a1 1 0 01.948.684l1.498 4.493a1 1 0 01-.502 1.21l-2.257 1.13a11.042 11.042 0 005.516 5.516l1.13-2.257a1 1 0 011.21-.502l4.493 1.498a1 1 0 01.684.949V19a2 2 0 01-2 2h-1C9.716 21 3 14.284 3 6V5z"></path></svg>
              <span>+34 623 188 108</span>
            </li>
          </ul>
        </div>
      </div>
      
      <!-- Bottom bar -->
      <div class="mt-16 pt-8 border-t border-gray-800 flex flex-col md:flex-row justify-between items-center">
        <p class="text-gray-400 text-sm">© 2025 RoboInventory. All rights reserved.</p>
        <div class="mt-4 md:mt-0">
          <ul class="flex space-x-6 text-sm text-gray-400">
            <li><a href="#" class="hover:text-white transition-colors">Privacy Policy</a></li>
            <li><a href="#" class="hover:text-white transition-colors">Terms of Service</a></li>
            <li><a href="#" class="hover:text-white transition-colors">Cookie Policy</a></li>
          </ul>
        </div>
      </div>
    </div>
  </footer>
</Layout>

<script>
  // Particle animation for tech section
  document.addEventListener('DOMContentLoaded', () => {
    // Initialize animations and interactions
    initParticleEffects();
    initScrollAnimations();
    initInteractiveElements();
  });

  function initParticleEffects() {
    // Tech particles animation
    const techParticlesContainer = document.getElementById('tech-particles');
    if (techParticlesContainer) {
      // Implement particle animation
      // This would be expanded with a proper particle library like particles.js
    }

    // CTA particles animation
    const ctaParticlesContainer = document.getElementById('cta-particles');
    if (ctaParticlesContainer) {
      // Implement particle animation
    }
  }

  function initScrollAnimations() {
    // Add scroll-triggered animations
    // This could be expanded with Intersection Observer API
    const elements = document.querySelectorAll('.animate-on-scroll');
    
    const observer = new IntersectionObserver((entries) => {
      entries.forEach(entry => {
        if (entry.isIntersecting) {
          entry.target.classList.add('animated');
        }
      });
    }, { threshold: 0.2 });
    
    elements.forEach(element => {
      observer.observe(element);
    });
  }

  function initInteractiveElements() {
    // Add hover effects and interactive elements
    // This could be expanded with more advanced interactions
  }
</script>

<style is:global>
  /* Core styles */
  @import url('https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700;800&display=swap');
  
  :root {
    --color-blue-50: #eff6ff;
    --color-blue-100: #dbeafe;
    --color-blue-500: #3b82f6;
    --color-blue-600: #2563eb;
    --color-blue-700: #1d4ed8;
    --color-blue-800: #1e40af;
    --color-blue-900: #1e3a8a;
    --color-blue-950: #172554;
    --color-indigo-600: #4f46e5;
    --color-indigo-700: #4338ca;
  }

  html {
    scroll-behavior: smooth;
  }
  
  body {
    font-family: 'Inter', sans-serif;
    overflow-x: hidden;
  }
  
  /* Grid floor effect for hero */
  .grid-floor {
    background-image: 
      linear-gradient(to right, rgba(59, 130, 246, 0.3) 1px, transparent 1px),
      linear-gradient(to bottom, rgba(59, 130, 246, 0.3) 1px, transparent 1px);
    background-size: 40px 40px;
  }
  
  /* Background patterns */
  .bg-pattern-grid {
    background-size: 30px 30px;
    background-image: 
      linear-gradient(to right, rgba(255, 255, 255, 0.1) 1px, transparent 1px),
      linear-gradient(to bottom, rgba(255, 255, 255, 0.1) 1px, transparent 1px);
  }
  
  .bg-circuit-pattern {
    /* This would be replaced with an actual SVG pattern */
    background-size: 300px 300px;
    background-image: url('/img/circuit-pattern.svg');
  }
  
  .bg-dot-pattern {
    background-size: 20px 20px;
    background-image: radial-gradient(circle, rgba(255, 255, 255, 0.1) 1px, transparent 1px);
    }
    /* Tech dots overlay */
    .tech-dots-overlay {
        background-image: radial-gradient(circle, rgba(255, 255, 255, 0.1) 1px, transparent 1px);
        background-size: 20px 20px;
        }
    /* Animation for glowing orbs */
    .pulse-animation {
        animation: pulse 2s infinite;
        }

    @keyframes pulse {
        0% {
            transform: scale(1);
            opacity: 0.5;
        }
        50% {
            transform: scale(1.2);
            opacity: 0.8;
        }
        100% {
            transform: scale(1);
            opacity: 0.5;
        }
    }
    /* Animation for CTA particles */
    #cta-particles {
        background-image: radial-gradient(circle, rgba(255, 255, 255, 0.1) 1px, transparent 1px);
        background-size: 20px 20px;
        animation: ctaParticles 5s infinite;
    }

    @keyframes ctaParticles {
        0% {
            transform: translate(0, 0);
        }
        50% {
            transform: translate(10px, -10px);
        }
        100% {
            transform: translate(0, 0);
        }
    }

    /* Animation for tech particles */
    #tech-particles {
        background-image: radial-gradient(circle, rgba(255, 255, 255, 0.1) 1px, transparent 1px);
        background-size: 20px 20px;
        animation: techParticles 5s infinite;
    }

    @keyframes techParticles {
        0% {
            transform: translate(0, 0);
        }
        50% {
            transform: translate(-10px, 10px);
        }
        100% {
            transform: translate(0, 0);
        }
    }

    /* Responsive styles */
    @media (max-width: 768px) {
        .grid-floor {
            background-size: 20px 20px;
        }
    }
</style>